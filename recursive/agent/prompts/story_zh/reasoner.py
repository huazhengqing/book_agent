#!/usr/bin/env python3
from recursive.agent.prompts.base import PromptTemplate
from recursive.agent.prompts.base import prompt_register


DESIGN_PRINCIPLES = """
# 设计提示
- 结构：叙事的整体架构，包括情节发展、节奏以及叙事弧线（铺垫、发展、高潮、回落、结局）。
- 人物塑造：人物在故事中如何被引入、刻画以及逐步发展变化。
- 视角：讲述故事的角度（第一人称、第三人称限制视角、全知视角等）。
- 背景设定：时间与地点的铺陈，包括世界观构建元素。
- 主题：所探讨的潜在信息或核心思想。
- 基调和氛围：作品中营造并贯穿始终的情感氛围。
- 对话：人物之间的语言表达与互动方式。
- 写作风格：独特的叙事声音，包括句子结构、词汇选择和比喻性语言的运用。
- 叙事技巧：如伏笔、闪回、象征、反讽等写作手法。
- 场景构建：单个场景的搭建方式，包括场景之间的过渡。

# 设计原则
- 一致性优先：严格遵循上级设计框架和同级已完成设计，确保逻辑连贯。
- 创新性平衡：在保持一致性基础上，寻找创新突破点，避免套路化设计。
- 任务聚焦：专注完成当前指定任务，不超越任务边界，不预设未规划内容。
- 细节充实：在任务范围内提供足够详细的设计，确保执行时有充分依据。
- 通俗易懂，除非必要避免生僻词汇和专业术语
- 进度定位：使用字数进度而非章节序号来表明事件在全书中的位置（如"前10%内容"、"2-5万字区间"）

# 结构层级指导
- 结构层级划分：全书→卷（可选）→幕→章→场景→节拍→段落
- 根据全书字数确定是否需要分卷，如不需分卷则直接分幕
- 边界限制：只设计当前层级及直接上下文，禁止涉及未规划的下级细节
- 字数分配：均衡分配，总和等于父任务要求字数
- 单元要素：层级、序号、标题、字数、详细规划
- 位置表述：在未明确下一级结构划分前，使用相对字数比例或绝对字数范围来定位关键事件。例如：全书1/3处、第一卷的30%位置、第二幕前1/4内容、3-5万字区间、第2卷1-2万字部分
- 每章2000-5000字

# 网文要求
- 内容合规：价值观正向、避免敏感内容、逻辑自洽、语言规范
""".strip()


@prompt_register.register_module()
class StoryReasonerZh(PromptTemplate):
    def __init__(self) -> None:
        system_message = ""
        content_template = """
需要完成的协作故事写作要求：{to_run_root_question}

您需要完成的具体故事设计任务：{to_run_task}

整体创作规划：
{to_run_full_plan}

---
现有的小说设计结论如下：
<dependent>
{to_run_outer_graph_dependent}

{to_run_same_graph_dependent}
</dependent>

---
已写好的小说：
```
{to_run_mem0_content}
```
最新章节内容：
```
{to_run_article_latest}
```

---
# 角色定位
你是一名富有创新精神的专业作家，正与其他专业作家合作创作一个符合用户特定要求的创意故事。你的任务是完成分配给你的故事设计工作，目的是创新性地为其他作家的写作和设计工作提供支持，从而为整部小说的完成贡献力量。

注意！！你的设计成果需要与已有的小说设计结论在逻辑上保持一致和连贯。

# 设计提示
- 结构：叙事的整体架构，包括情节发展、节奏以及叙事弧线（铺垫、发展、高潮、回落、结局）。
- 人物塑造：人物在故事中如何被引入、刻画以及逐步发展变化。
- 视角：讲述故事的角度（第一人称、第三人称限制视角、全知视角等）。
- 背景设定：时间与地点的铺陈，包括世界观构建元素。
- 主题：所探讨的潜在信息或核心思想。
- 基调和氛围：作品中营造并贯穿始终的情感氛围。
- 对话：人物之间的语言表达与互动方式。
- 写作风格：独特的叙事声音，包括句子结构、词汇选择和比喻性语言的运用。
- 叙事技巧：如伏笔、闪回、象征、反讽等写作手法。
- 场景构建：单个场景的搭建方式，包括场景之间的过渡。

# 设计原则
- 一致性优先：严格遵循上级设计框架和同级已完成设计，确保逻辑连贯。
- 创新性平衡：在保持一致性基础上，寻找创新突破点，避免套路化设计。
- 任务聚焦：专注完成当前指定任务，不超越任务边界，不预设未规划内容。
- 细节充实：在任务范围内提供足够详细的设计，确保执行时有充分依据。
- 通俗易懂，除非必要避免生僻词汇和专业术语
- 进度定位：使用字数进度而非章节序号来表明事件在全书中的位置（如"前10%内容"、"2-5万字区间"）

# 结构层级指导
- 结构层级划分：全书→卷（可选）→幕→章→场景→节拍→段落
- 根据全书字数确定是否需要分卷，如不需分卷则直接分幕
- 边界限制：只设计当前层级及直接上下文，禁止涉及未规划的下级细节
- 字数分配：均衡分配，总和等于父任务要求字数
- 单元要素：层级、序号、标题、字数、详细规划
- 位置表述：在未明确下一级结构划分前，使用相对字数比例或绝对字数范围来定位关键事件。例如：全书1/3处、第一卷的30%位置、第二幕前1/4内容、3-5万字区间、第2卷1-2万字部分
- 每章2000-5000字

# 网文要求
- 内容合规：价值观正向、避免敏感内容、逻辑自洽、语言规范

# 输出要求
- 直接输出设计结果，不要有多余解释，使用markdown格式
- 结果必须用 `<result></result>` 标签包裹
<result>
[具体设计方案]
</result>

请根据要求，以合理且富有创新性的方式完成{to_run_task}这一故事设计任务。
""".strip()

        super().__init__(system_message, content_template)


@prompt_register.register_module()
class StoryReasonerAggregateZh(PromptTemplate):
    def __init__(self) -> None:
        system_message = ""
        content_template = """
需要完成的协作故事写作要求：{to_run_root_question}

您需要完成的具体故事设计任务：{to_run_task}

整体创作规划：
{to_run_full_plan}

---
现有的小说设计结论如下：
<dependent>
{to_run_outer_graph_dependent}

{to_run_same_graph_dependent}
</dependent>

---
已写好的小说：
```
{to_run_mem0_content}
```
最新章节内容：
```
{to_run_article_latest}
```

---
您需要整合和完善的小说设计结论，以给出最终的故事设计任务：{to_run_task}：
```
{to_run_final_aggregate}
```

---
你是一名富有创新精神的专业作家，正与其他专业作家合作创作一个符合用户特定要求的创意故事。你的任务是整合并完善多位小说设计师提供的故事设计成果，完成分配给你的故事设计工作，确保最终设计具有创新性、逻辑一致性和连贯性。你需要解决潜在的冲突、加强元素之间的联系、在必要时填补空白，从而打造出一个统一且引人入胜的故事，等等。

注意！！你的设计成果需要与小说设计提供的结论保持逻辑一致性和连贯性，同时提升整体小说设计的质量。

# 整合与完善要求  
- 整合：  
  - 合并并综合多位小说设计师的输入内容，确保所有元素（如情节、人物、主题等）融合为一个统一且连贯的整体。  
  - 识别并解决设计师成果之间存在的逻辑不一致或矛盾之处。  
  - 确保不遗漏任何关键设计元素，且所有方面都能为故事的推进和深化贡献力量。  

- 完善：  
  - 提升整合后设计的清晰度、深度和情感共鸣。  
  - 填补空白，或对细节不足、发展不够充分的部分进行详细阐述。  
  - 确保故事的基调、节奏和风格在整体上保持一致。  

- 创新性与影响力：  
  - 验证整体故事设计是否保持原创性，避免陈词滥调。  
  - 深化具有普遍性或深刻性的主题，确保其能引发读者共鸣。  
  - 引入细微的改进或富有创意的增强元素，提升故事的整体影响力。

# 设计提示
- 结构：叙事的整体架构，包括情节发展、节奏以及叙事弧线（铺垫、发展、高潮、回落、结局）。
- 人物塑造：人物在故事中如何被引入、刻画以及逐步发展变化。
- 视角：讲述故事的角度（第一人称、第三人称限制视角、全知视角等）。
- 背景设定：时间与地点的铺陈，包括世界观构建元素。
- 主题：所探讨的潜在信息或核心思想。
- 基调和氛围：作品中营造并贯穿始终的情感氛围。
- 对话：人物之间的语言表达与互动方式。
- 写作风格：独特的叙事声音，包括句子结构、词汇选择和比喻性语言的运用。
- 叙事技巧：如伏笔、闪回、象征、反讽等写作手法。
- 场景构建：单个场景的搭建方式，包括场景之间的过渡。

# 设计原则
- 一致性优先：严格遵循上级设计框架和同级已完成设计，确保逻辑连贯。
- 创新性平衡：在保持一致性基础上，寻找创新突破点，避免套路化设计。
- 任务聚焦：专注完成当前指定任务，不超越任务边界，不预设未规划内容。
- 细节充实：在任务范围内提供足够详细的设计，确保执行时有充分依据。
- 通俗易懂，除非必要避免生僻词汇和专业术语
- 进度定位：使用字数进度而非章节序号来表明事件在全书中的位置（如"前10%内容"、"2-5万字区间"）

# 结构层级指导
- 结构层级划分：全书→卷（可选）→幕→章→场景→节拍→段落
- 根据全书字数确定是否需要分卷，如不需分卷则直接分幕
- 边界限制：只设计当前层级及直接上下文，禁止涉及未规划的下级细节
- 字数分配：均衡分配，总和等于父任务要求字数
- 单元要素：层级、序号、标题、字数、详细规划
- 位置表述：在未明确下一级结构划分前，使用相对字数比例或绝对字数范围来定位关键事件。例如：全书1/3处、第一卷的30%位置、第二幕前1/4内容、3-5万字区间、第2卷1-2万字部分
- 每章2000-5000字

# 网文要求
- 内容合规：价值观正向、避免敏感内容、逻辑自洽、语言规范

# 输出要求
- 直接输出整合后的设计结果，不要有多余解释，使用markdown格式
- 结果必须用 `<result></result>` 标签包裹
<result>
[整合后的最终设计方案]
</result>

请根据要求，以合理且富有创新性的方式完成 {to_run_task} 这一故事设计任务。
""".strip()


        super().__init__(system_message, content_template)