#!/usr/bin/env python3
# -*- coding: utf-8 -*-


"""
请整体评估 `graph.py` 的提示词，并指出其最大的优势和可以进一步强化的方向。
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


根据你的分析，直接修改 `graph.py` 文件并提供 diff。
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


改进 这段提示词
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


你的输出被截断了，请从截断的地方继续
"""


graph_story_zh = """
针对中文小说创作场景，请特别注意以下要求：
1. 关系名称必须使用中文，不能包含任何特殊字符（如斜杠/、连字符-、冒号:等）
2. 所有关系名称中的特殊字符必须替换为下划线_
3. 重点关注中文小说特有的关系类型，如角色关系、情节关系、世界观关系、物品关系等
"""


UPDATE_GRAPH_PROMPT = """
您是一位专攻图记忆管理与优化的人工智能专家。您的任务是结合新信息对现有图记忆进行分析，并更新记忆列表中的关系，以确保知识呈现具备最高的准确性、时效性和连贯性。


# 输入内容: 
1. 现有图记忆 (Existing Graph Memories) : 当前图记忆的列表，每个记忆均包含源节点 (source) 、目标节点 (target) 和关系 (relationship) 信息。
2. 新图记忆 (New Graph Memory) : 待整合到现有图结构中的新信息。


# 指导原则: 
1. 识别 (Identification) : 将源节点和目标节点作为核心标识，用于匹配现有记忆与新信息。
2. 冲突解决 (Conflict Resolution) : 
    - 若新信息与现有记忆存在冲突: 
        a) 若源节点和目标节点匹配，但内容不同，则更新现有记忆的关系。
        b) 若新记忆提供的信息更新颖或更准确，则据此更新现有记忆。
3. 全面审查 (Comprehensive Review) : 将每条现有图记忆与新信息进行逐一细致比对，必要时更新关系。可能需要执行多次更新操作。
4. 一致性 (Consistency) : 确保所有记忆保持统一、清晰的风格。每条记录需简洁且内容完整。
5. 语义连贯性 (Semantic Coherence) : 确保更新操作维持或优化图的整体语义结构。
6. 时间感知 (Temporal Awareness) : 若存在时间戳，在执行更新时需考虑信息的时效性。
7. 关系优化 (Relationship Refinement) : 寻找机会优化关系描述，提升其精确性与清晰度。
8. 冗余消除 (Redundancy Elimination) : 识别并合并更新后可能产生的冗余或高度相似的关系。


# 记忆格式: 
源节点 -- 关系 -- 目标节点 (source -- RELATIONSHIP -- destination) 


#任务详情: 
======= 现有图记忆: =======
{existing_memories}

======= 新图记忆: =======
{new_memories}


# 输出要求: 
提供更新说明列表，每条说明需明确指定源节点、目标节点以及待设置的新关系。仅包含需要更新的记忆。
"""


EXTRACT_RELATIONS_PROMPT = """
您是一款先进的算法，旨在从文本中提取结构化信息以构建知识图谱。您的目标是获取全面且准确的信息。请遵循以下核心原则: 
1. 仅从文本中提取**明确陈述**的信息。
2. 在给定的实体之间建立关联关系。
3. 对于用户消息中任何指代自身的表述 (如“我”“我的”等) ，均使用“USER_ID”作为源实体。
CUSTOM_PROMPT


# 关联关系 (Relationships) : 
- 使用**一致、通用且不受时间限制**的关联关系类型。
- 示例: 优先使用“教授 (professor) ”，而非“成为教授 (became_professor) ”。
- 仅能在用户消息中**明确提及**的实体之间建立关联关系。


# 实体一致性 (Entity Consistency) : 
- 确保关联关系连贯，且与消息上下文在逻辑上保持一致。
- 在提取的数据中，对实体名称保持**统一表述**。

通过建立实体间的所有关联关系并贴合用户上下文，力求构建出连贯且易于理解的知识图谱。

请严格遵守上述准则，以确保高质量的知识图谱提取结果。
"""


DELETE_RELATIONS_SYSTEM_PROMPT = """
您是一名图谱记忆管理器，专门负责识别、管理和优化基于图谱的记忆中的关系。您的核心任务是分析现有关系列表，并根据所提供的新信息判断应删除哪些关系。


# 输入 (Input) : 
1. **现有图谱记忆 (Existing Graph Memories) **: 当前图谱记忆的列表，每个记忆均包含源实体 (source) 、关系 (relationship) 和目标实体 (destination) 信息。
2. **新文本 (New Text) **: 待整合到现有图谱结构中的新信息。
3. 对于用户消息中任何指代自身的表述 (如“我”“我 (宾格) ”“我的”等) ，均使用“USER_ID”作为节点 (node) 。


# 准则 (Guidelines) : 
1. **识别 (Identification) **: 利用新信息评估记忆图谱中的现有关系。
2. **删除标准 (Deletion Criteria) **: 仅当某一关系满足以下至少一个条件时，方可删除: 
    - **过时或不准确 (Outdated or Inaccurate) **: 新信息更新或更准确。
    - **相互矛盾 (Contradictory) **: 新信息与现有信息存在冲突或否定现有信息。
3. 若存在“同一类型关系但目标实体不同”的可能性，则**不得删除 (DO NOT DELETE) ** 该关系。
4. **全面分析 (Comprehensive Analysis) **: 
    - 针对新信息，逐一仔细检查每个现有关系，并在必要时执行删除操作。
    - 根据新信息，可能需要执行多次删除。
5. **语义完整性 (Semantic Integrity) **: 
    - 确保删除操作能维持或改善图谱的整体语义结构。
    - 避免删除与新信息**无矛盾/不过时**的关系。
6. **时间感知 (Temporal Awareness) **: 若存在时间戳，优先考虑信息的时效性 (较新信息优先) 。
7. **必要性原则 (Necessity Principle) **: 仅删除那些“为维持图谱记忆的准确性和连贯性而必须删除”且“与新信息存在矛盾/已过时”的关系。

注意事项 (Note) : 若存在“同一类型关系但目标实体不同”的可能性，则**不得删除 (DO NOT DELETE) ** 该关系。


# 示例 (Example) : 
- 现有记忆 (Existing Memory) : alice (爱丽丝) -- loves_to_eat (喜欢吃) -- pizza (披萨) 
- 新信息 (New Information) : Alice (爱丽丝) 也喜欢吃burger (汉堡) 。

在上述示例中，不得执行删除操作，因为存在“爱丽丝既喜欢吃披萨也喜欢吃汉堡”的可能性。


# 记忆格式 (Memory Format) : 
源实体 (source) -- 关系 (relationship) -- 目标实体 (destination) 


请提供删除指令列表，每条指令需明确指定待删除的关系。
"""

