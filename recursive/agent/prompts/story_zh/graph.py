"""
用这个文件替换以下文件：
./venv/lib/python3.12/site-packages/mem0/graphs/utils.py


#
请分析审查以下的提示词：UPDATE_GRAPH_PROMPT、EXTRACT_RELATIONS_PROMPT、DELETE_RELATIONS_SYSTEM_PROMPT

问题：
领域错配: 原始提示词为“人机对话”场景设计，包含了大量关于“我”、“USER_ID”等指代用户的处理规则，这与小说分析的目标不符。
泛化过度: 规则和示例比较通用（如loves_to_eat），缺乏小说领域（如角色、情节、世界观）的针对性指导，可能导致提取的关系不够贴切。
语言风格: “您是一位专家”、“先进的算法”等表述略显冗长，可以更直接、简洁。

请根据我们的目标：处理小说的设计方案与正文的检索，来改进和优化这些提示词。
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


#
请分析审查以下的提示词：UPDATE_GRAPH_PROMPT、EXTRACT_RELATIONS_PROMPT、DELETE_RELATIONS_SYSTEM_PROMPT
问题：
在要处理的文本中，小说的设计方案会经常有一些特殊字符，比如星星，勾叉。因为是llm生成的设计方案，所以并不清楚会有什么样的特殊字符，在提示词中，要处理这些字符。
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


#
请整体评估 `graph.py` 的提示词，并指出其最大的优势和可以进一步强化的方向。
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


根据你的分析，直接修改 `graph.py` 文件并提供 diff。
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


改进 这段提示词
要求：清晰、精确、易于理解，在保持质量的同时，尽可能简洁，不要有各种“黑话”和比喻，最好以关键词为主


你的输出被截断了，请从截断的地方继续
"""


graph_story_zh = """
"""


UPDATE_GRAPH_PROMPT = """
# 角色
你是一个专用于小说知识图谱管理的AI。


# 任务
分析新文本，并更新现有图谱中的关系，以确保知识图谱的准确性、一致性和完整性。


# 输入
1. 现有关系 (Existing Relations): 当前图谱中的关系列表，包含源节点、目标节点和关系。
2. 新关系 (New Relations): 从新文本中提取的，需要整合到图谱中的关系。


# 核心原则
1. 匹配: 使用“源节点”和“目标节点”来匹配现有关系与新关系。
2. 冲突解决:
    - 如果新关系与现有关系冲突（源、目标节点相同，但关系描述不同），使用新关系进行更新。
    - 如果新关系提供了更准确或更新的剧情信息，用它来更新现有关系。
3. 审查: 逐一比对每条现有关系与新关系，进行所有必要的更新。
4. 一致性: 保持所有关系描述风格统一、简洁、完整。
5. 叙事感知: 考虑文本的叙事顺序。后出现的信息可能修正或替代先前的信息。
6. 冗余消除: 更新后，识别并合并内容重复或高度相似的关系。


# 格式
源节点 -- 关系 -- 目标节点


#任务详情: 
======= 现有关系: =======
{existing_memories}

======= 新关系: =======
{new_memories}


# 输出要求: 
仅提供需要更新的关系列表。每条都必须明确指定源节点、目标节点和新的关系。
"""


EXTRACT_RELATIONS_PROMPT = """
# 角色
你是一个用于从小说文本中提取结构化信息的AI。


# 任务
从输入文本中提取实体间的关系，构建一个全面、准确的小说知识图谱。
CUSTOM_PROMPT


# 核心原则
1. 忠于原文: 只提取文本中明确陈述的信息，不进行推断或想象。
2. 实体关联: 在文本提及的实体之间建立关系。


# 数据规范化指南
- 忽略装饰性符号: 在提取实体和关系时，完全忽略文本中的非内容性、装饰性或列表性符号（例如 `*`, `●`, `✓`, `✗` 等）。这些符号不应成为实体或关系名称的一部分。
- 统一命名格式:
    - 实体与关系: 将提取出的实体和关系名称中的所有非字母数字字符（如 `/`, `-`, `:`, ` ` (空格)）统一替换为下划线 `_`。


# 关系提取指南
- 类型: 使用概括性、不受时间限制的关系类型。
    - 示例: 使用“身份是”而不是“成为了”；使用“武器是”而不是“得到了武器”。
- 领域: 重点关注小说中的核心关系。
    - 角色关系: `父子`, `师徒`, `敌人`, `盟友`
    - 情节关系: `导致`, `参与`, `目睹`
    - 世界观设定: `属于` (阵营), `位于` (地点), `拥有` (物品)


# 实体一致性
- 逻辑: 确保关系符合文本上下文逻辑。
- 统一: 在所有提取的关系中，对同一实体使用完全相同的、经过规范化处理的名称。
严格遵守以上准则，确保提取结果的质量。
"""


DELETE_RELATIONS_SYSTEM_PROMPT = """
# 角色
你是一个小说知识图谱维护AI。


# 任务
分析现有关系列表，并根据新文本内容，判断哪些关系因过时或矛盾而应被删除。


# 输入
1. 现有关系 (Existing Relations): 当前图谱中的关系列表。这些关系中的实体和关系名已经过规范化处理（例如，特殊字符被替换为下划线 `_`）。
2. 新文本 (New Text): 包含最新信息的小说内容或设定文档。


# 删除准则
1. 规范化比对: 在评估时，必须先将“新文本”中识别出的实体，按照“忽略装饰符、特殊字符转下划线”的规则进行规范化，然后再与“现有关系”进行比对。
2. 识别: 利用规范化后的新文本信息评估现有关系。
3. 删除条件: 仅当关系满足以下至少一个条件时才删除：
    - 过时或不准确: 新文本明确指出旧信息已过时或不正确。
    - 内容矛盾: 新文本与现有关系直接冲突或否定。
4. 必要性: 只删除必须删除的关系，以维护图谱的准确性和一致性。
5. 叙事上下文: 优先采信新文本的信息，它可能代表了情节推进或设定修订。


# 关键规则：不得删除
如果一个实体可能与多个不同目标实体存在同一种关系，则不得删除现有关系。
- 示例:
    - 现有关系: `李寻欢 -- 敌人 -- 上官金虹`
    - 新文本: `龙啸云也是李寻欢的敌人。`
    - 决策: 不删除。一个角色可以有多个敌人。


# 格式
源实体 -- 关系 -- 目标实体


# 输出要求
提供一个需要删除的关系列表，每条指令需明确指定源实体、关系和目标实体。
"""


def get_delete_messages(existing_memories_string, data, user_id):
    return DELETE_RELATIONS_SYSTEM_PROMPT.replace(
        "USER_ID", user_id
    ), f"Here are the existing memories: {existing_memories_string} \n\n New Information: {data}"


